<<<<<<< HEAD
'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _chalk;








function _load_chalk() {return _chalk = _interopRequireDefault(require('chalk'));}var _prettyFormat;
function _load_prettyFormat() {return _prettyFormat = _interopRequireDefault(require('pretty-format'));}function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };} /**
                                                                                                                                                                                                       * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
                                                                                                                                                                                                       *
                                                                                                                                                                                                       * This source code is licensed under the MIT license found in the
                                                                                                                                                                                                       * LICENSE file in the root directory of this source tree.
                                                                                                                                                                                                       *
                                                                                                                                                                                                       * 
                                                                                                                                                                                                       */const format = value => (0, (_prettyFormat || _load_prettyFormat()).default)(value, { min: true });exports.default = { preprocessorIgnorePatterns: options => `  Option ${(_chalk || _load_chalk()).default.bold(
  '"preprocessorIgnorePatterns"')
  } was replaced by ${(_chalk || _load_chalk()).default.bold(
  '"transformIgnorePatterns"')
  }, which support multiple preprocessors.

  Jest now treats your current configuration as:
  {
    ${(_chalk || _load_chalk()).default.bold('"transformIgnorePatterns"')}: ${(_chalk || _load_chalk()).default.bold(
  `${format(options.preprocessorIgnorePatterns)}`)
  }
=======
/**
 * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

const chalk = require('chalk');
const format = value => require('pretty-format')(value, { min: true });

/* eslint-disable max-len */
const deprecatedOptions = {
  preprocessorIgnorePatterns: config =>
  `  Option ${chalk.bold('"preprocessorIgnorePatterns"')} was replaced by ${chalk.bold('"transformIgnorePatterns"')}, which support multiple preprocessors.

  Jest now treats your current configuration as:
  {
    ${chalk.bold('"transformIgnorePatterns"')}: ${chalk.bold(`${format(config.preprocessorIgnorePatterns)}`)}
>>>>>>> master
  }

  Please update your configuration.`,

<<<<<<< HEAD
  scriptPreprocessor: options =>

  `  Option ${(_chalk || _load_chalk()).default.bold(
  '"scriptPreprocessor"')
  } was replaced by ${(_chalk || _load_chalk()).default.bold(
  '"transform"')
  }, which support multiple preprocessors.

  Jest now treats your current configuration as:
  {
    ${(_chalk || _load_chalk()).default.bold('"transform"')}: ${(_chalk || _load_chalk()).default.bold(
  `{".*": ${format(options.scriptPreprocessor)}}`)
  }
=======
  scriptPreprocessor: config =>
  `  Option ${chalk.bold('"scriptPreprocessor"')} was replaced by ${chalk.bold('"transform"')}, which support multiple preprocessors.

  Jest now treats your current configuration as:
  {
    ${chalk.bold('"transform"')}: ${chalk.bold(`{".*": ${format(config.scriptPreprocessor)}}`)}
>>>>>>> master
  }

  Please update your configuration.`,

<<<<<<< HEAD
  testPathDirs: options =>

  `  Option ${(_chalk || _load_chalk()).default.bold('"testPathDirs"')} was replaced by ${(_chalk || _load_chalk()).default.bold(
  '"roots"')
  }.

  Jest now treats your current configuration as:
  {
    ${(_chalk || _load_chalk()).default.bold('"roots"')}: ${(_chalk || _load_chalk()).default.bold(format(options.testPathDirs))}
  }

  Please update your configuration.
  ` };
=======
  testPathDirs: config =>
  `  Option ${chalk.bold('"testPathDirs"')} was replaced by ${chalk.bold('"roots"')}.

  Jest now treats your current configuration as:
  {
    ${chalk.bold('"roots"')}: ${chalk.bold(format(config.testPathDirs))}
  }

  Please update your configuration.
  ` };

/* eslint-enable max-len */

module.exports = deprecatedOptions;
>>>>>>> master
